<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                 {{nickname}}(님의 댓글)
                <!-- 모달 트리거 버튼 -->
                <button type="button" class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"

                data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}">
                    수정

                    <!--수정을 눌렀을때 data-bs-target="#comment-edit-modal" 보여줄대상.-->
                    <!--댓글 삭제 버튼 -->

                </button>
                <button type="button"
                class="btn btn-sm btn-outline-danger comment-delete-btn"
                data-comment-id="{{id}}">삭제</button>
            </div>
            <div class="card-body">
                {{body}}
            </div>

        </div>

    {{/commentDtos}}


    <!-- Modal -->
    <div class="modal fade" id="comment-edit-modal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                        <!--댓글 수정 폼-->
                        <form>
                            <!--닉네임 입력-->
                            <div class="mb-3">
                                <label  class="form-label">닉네임</label>
                                <input  class="form-control form-control" id="edit-comment-nickname">
                            </div>
                            <!--댓글 내용 입력-->
                            <div class="mb-3">
                                <label  class="form-label">내용</label>
                                <textarea  class="form-control" id="edit-comment-body"></textarea>
                            </div>
                                <input type="hidden" id="edit-comment-id">

                                <input type="hidden" id="edit-comment-article-id">

                            <button type="button" class="btn btn-outline-primary"
                                    id="comment-update-btn">수정 완료</button>

                        </form>



                </div>

            </div>
        </div>
    </div>
</div>


<!-- 모달 이벤트 처리-->
<script>
    {
    //모달 요소 선택
     const commentEditModal = document.querySelector("#comment-edit-modal");

    //모달 이벤트 감지
    commentEditModal.addEventListener("show.bs.modal",function(event) {
    //트리거 버튼 선택
    const  triggerBtn= event.relatedTarget;

    //데이터 가져오기
   const id = triggerBtn.getAttribute("data-bs-id");
   const nickname = triggerBtn.getAttribute("data-bs-nickname");
   const body = triggerBtn.getAttribute("data-bs-body");
   const articleId = triggerBtn.getAttribute("data-bs-article-id");

    //데이터를 반영
    document.querySelector("#edit-comment-nickname").value = nickname;
    document.querySelector("#edit-comment-body").value = body;
    document.querySelector("#edit-comment-id").value = id;
    document.querySelector("#edit-comment-article-id").value = articleId;




    });
    }

    {
    //수정완료 버튼
    const commentUpdateBtn = document.querySelector("#comment-update-btn");

    //클릭 이벤트 감지 및 처리
    commentUpdateBtn.addEventListener("click",function(){
    //수정 댓글 객체 생성
    const comment = {
    id: document.querySelector("#edit-comment-id").value,
    nickname: document.querySelector("#edit-comment-nickname").value,
    body: document.querySelector("#edit-comment-body").value,
    article_id: document.querySelector("#edit-comment-article-id").value

    };


    //수정 restapi 를 호출 - fetch() 통해서
    const url = "/api/comments/" + comment.id;
    fetch(url,{
    method:"PATCH",
    body: JSON.stringify(comment),
    headers: {
     "content-type" :"application/json"
    }


    }).then(response => {
    //http 응답 코드에 따른 메시지 출력
    const msg = (response.ok) ? "댓글이 수정되었습니다.."
    : "댓글 수정 실패..!";
    alert(msg); //alert 라는 자바 스크립트
    //함수를 통해 출력해주겠다.

     window.location.reload();




    });
    });
    }




</script>

<!-- 댓글 삭제 -->
<script>
    {
    //삭제 버튼 선택
    const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn")

    //삭제 버튼 이벤트 처리
    commentDeleteBtns.forEach(btn =>{
    //각 버튼의 이벤트 처리를 등록한다.
    btn.addEventListener("click",function(event){
    //이벤트 발생 요소를 선택
    const commentDeleteBtn = event.target;


//삭제 댓글 id 가져오기
    const commentId=commentDeleteBtn.getAttribute("data-comment-id");
    console.log(`삭제 버튼클릭:${commentId}번 댓글`);
    //"삭제 버튼 클릭: "+commentId+"번 댓글";
    //삭제 API 호출 및 처리

    const url = "/api/comments/" +commentId;
    fetch(url,{
    method: "DELETE"

    }).then(response =>{
    //댓글 삭제 실패처리
    if(!response.ok) {
    alert("댓글이 삭제되지 않았습니다");
    return;
    }

    //삭제 성공시,댓글을 화면에서지움!
    window.location.reload();



    });


    });

    });

    }

</script>